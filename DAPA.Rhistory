setwd("C:/Users/MAYURESH/OneDrive - National College of Ireland/NCI/SEMESTER 2/DAPA/Project/IMPLEMENATATION DOCUMENTATION/CODE/dataset")
campinghiking <- read.csv("campinghiking.csv", header=T, na.strings=c(""), stringsAsFactors = T)
CardioEquipments <- read.csv("CardioEquipments.csv",header=T, na.strings=c(""), stringsAsFactors = T)
campinghikingts <- ts(campinghiking,start = c(2015,1) ,frequency = 12)
CardioEquipmentsts <- ts(CardioEquipments,start = c(2015,1),frequency = 12)
is.ts(campinghikingts)
plot.ts(campinghikingts, main= "Sales for Camping and Hiking")
plot.ts(CardioEquipments, main= "Sales for CardioEquipments")
start(CardioEquipments)
end(CardioEquipments)
autoplot(campinghikingts)
monthplot(campinghikingts)
seasonplot(campinghikingts)
dec.camphike<- decompose(campinghikingts, type="additive")
dec.camphike
plot(dec.camphike)
summary(dec.camphike)
#Arima
#Test
adf.test(campinghikingts)
ndiffs(campinghikingts)
nsdiffs(campinghikingts)
dcampinghikingts= diff(campinghikingts)
adf.test(dcampinghikingts)
ndiffs(dcampinghikingts)
acf(campinghikingts)
pacf(campinghikingts)
#Arima Model
autofit<-auto.arima(campinghikingts)
qqnorm(autofit$residuals)
qqline(autofit$residuals)
Box.test(autofit$residuals, type = "Ljung-Box")
checkresiduals(autofit)
forecast(autofit,4)
fitcamphike <-arima(campinghikingts,order = c(1,1,1), seasonal= c(1,1,1))
fit
summary(fit)
qqnorm(fit$residuals)
qqline(fit$residuals)
Box.test(fit$residuals, type = "Ljung-Box")
checkresiduals(fit)
forecast(fit,4)
plot(forecast(fit,8),Xlab="Month",ylab="Consumption")
plot(forecast(fit, 12)) #forecast and actual data
pred_camphike <- fitted.values(fit)
lines(pred_camphike, col="red") #add predicted values during training
campinghiking
predicted_camphike= as.data.frame(predicted)
fitcamphike <-arima(campinghikingts,order = c(1,1,1), seasonal= c(1,1,1))
fit
summary(fit)
fitcamphike <-arima(campinghikingts,order = c(1,1,1), seasonal= c(1,1,1))
fit
summary(fit)
fitcamphikecamphike <-arima(campinghikingts,order = c(1,1,1), seasonal= c(1,1,1))
fitcamphikecamphike
summary(fitcamphike)
fitcamphike <-arima(campinghikingts,order = c(1,1,1), seasonal= c(1,1,1))
fitcamphikecamphike
summary(fitcamphike)
fitcamphike <-arima(campinghikingts,order = c(1,1,1), seasonal= c(1,1,1))
fitcamphikecamphike
summary(fitcamphike)
rm(CardioEquipments)
rm(CardioEquipmentsts)
rm(fitcamphikecamphike)
fitcamphike <-arima(campinghikingts,order = c(1,1,1), seasonal= c(1,1,1))
fitcamphike <-arima(campinghikingts,order = c(1,0,1), seasonal= c(1,0,1))
summary(fitcamphike)
fitcamphikecamphike
fitcamphike
qqnorm(fitcamphike$residuals)
qqline(fitcamphike$residuals)
Box.test(fitcamphike$residuals, type = "Ljung-Box")
checkresiduals(fitcamphike)
forecast(fitcamphike,4)
library(tseries)
summary(fitcamphike)
library(fpp2)
library(carTool)
install.packages("carTool")
library(carTool)
install.packages("carTool")
library(carTool)
fitcamphike <-arima(campinghikingts,order = c(1,1,1), seasonal= c(1,1,1))
fitcamphike
summary(fitcamphike)
qqnorm(fitcamphike$residuals)
qqline(fitcamphike$residuals)
Box.test(fitcamphike$residuals, type = "Ljung-Box")
checkresiduals(fitcamphike)
forecast(fitcamphike,4)
plot(forecast(fitcamphike,8),Xlab="Month",ylab="Consumption")
plot(forecast(fitcamphike, 12)) #forecast and actual data
pred_camphike <- fitcamphiketed.values(fitcamphike)
lines(pred_camphike, col="red") #add predicted values during training
campinghiking
predicted_camphike= as.data.frame(predicted)
plot(forecast(fitcamphike, 12)) #forecast and actual data
pred_camphike <- fitcamphiketed.values(fitcamphike)
lines(pred_camphike, col="red") #add predicted values during training
plot(forecast(fitcamphike, 12)) #forecast and actual data
pred_camphike <- fitcamphike.values(fitcamphike)
lines(pred_camphike, col="red") #add predicted values during training
plot(forecast(fitcamphike, 12)) #forecast and actual data
pred_camphike <- fitcamphike.values(fitcamphike)
plot(forecast(fitcamphike, 12)) #forecast and actual data
pred_camphike <- fit.values(fitcamphike)
lines(pred_camphike, col="red") #add predicted values during training
plot(forecast(fitcamphike, 12)) #forecast and actual data
pred_camphike <- fitted.values(fitcamphike)
lines(pred_camphike, col="red") #add predicted values during training
campinghiking
predicted_camphike= as.data.frame(predicted)
setwd("C:/Users/MAYURESH/OneDrive - National College of Ireland/NCI/SEMESTER 2/DAPA/Project/IMPLEMENATATION DOCUMENTATION/CODE/dataset")
Cleats <- read.csv("Cleats.csv",header=T, na.strings=c(""), stringsAsFactors = T)
ts_Cleats <- ts(Cleats,start = c(2015,1),frequency = 12)
is.ts(campinghikingts)
plot.ts(ts_Cleats, main= "Sales for CardioEquipments")
start(ts_Cleats)
end(ts_Cleats)
autoplot(ts_Cleats)
monthplot(ts_Cleats)
seasonplot(ts_Cleats)
dec.ts_Cleats<- decompose(ts_Cleats, type="additive")
dec.ts_Cleats
plot(dec.ts_Cleats)
summary(dec.ts_Cleats)
adf.test(ts_Cleats)
ndiffs(ts_Cleats)
nsdiffs(ts_Cleats)
acf(ts_Cleats)
pacf(ts_Cleats)
fitts_Cleats <-arima(ts_Cleats,order = c(2,1,3), seasonal= c(1,1,1))
fitts_Cleats
summary(fitts_Cleats)
qqnorm(fitts_Cleats$residuals)
qqline(fitts_Cleats$residuals)
Box.test(fitts_Cleats$residuals, type = "Ljung-Box")
checkresiduals(fitts_Cleats)
forecast(fitts_Cleats,4)
plot(forecast(fitts_Cleats,8),Xlab="Month",ylab="Consumption")
plot(forecast(fitts_Cleats, 12)) #forecast and actual data
pred_Cleats <- fitted.values(fitts_Cleats)
lines(pred_Cleats, col="red") #add predicted values during training
predicted_Cleats= as.data.frame(pred_Cleats)
setwd("C:/Users/MAYURESH/OneDrive - National College of Ireland/NCI/SEMESTER 2/DAPA/Project/IMPLEMENATATION DOCUMENTATION/CODE/dataset")
CardioEquipments <- read.csv("CardioEquipments.csv",header=T, na.strings=c(""), stringsAsFactors = T)
ts_CardioEquipmentsts <- ts(CardioEquipments,start = c(2015,1),frequency = 12)
is.ts(campinghikingts)
plot.ts(ts_CardioEquipmentsts, main= "Sales for CardioEquipments")
start(ts_CardioEquipmentsts)
end(ts_CardioEquipmentsts)
autoplot(ts_CardioEquipmentsts)
monthplot(ts_CardioEquipmentsts)
seasonplot(ts_CardioEquipmentsts)
dec.ts_CardioEquipmentsts<- decompose(ts_CardioEquipmentsts, type="additive")
dec.ts_CardioEquipmentsts
plot(dec.ts_CardioEquipmentsts)
summary(dec.ts_CardioEquipmentsts)
adf.test(ts_CardioEquipmentsts)
ndiffs(ts_CardioEquipmentsts)
nsdiffs(ts_CardioEquipmentsts)
acf(ts_CardioEquipmentsts)
pacf(ts_CardioEquipmentsts)
fitCardioEquipmentsts <-arima(ts_CardioEquipmentsts,order = c(0,1,3), seasonal= c(1,1,1))
fitCardioEquipmentsts
summary(fitCardioEquipmentsts)
qqnorm(fitCardioEquipmentsts$residuals)
qqline(fitCardioEquipmentsts$residuals)
Box.test(fitCardioEquipmentsts$residuals, type = "Ljung-Box")
checkresiduals(fitCardioEquipmentsts)
forecast(fitCardioEquipmentsts,4)
plot(forecast(fitCardioEquipmentsts,8),Xlab="Month",ylab="Consumption")
plot(forecast(fitCardioEquipmentsts, 12)) #forecast and actual data
pred_CardioEquipmentsts <- fitted.values(fitCardioEquipmentsts)
lines(pred_CardioEquipmentsts, col="red") #add predicted values during training
predicted_CardioEquipments= as.data.frame(pred_CardioEquipmentsts)
fitCardioEquipmentsts <-arima(ts_CardioEquipmentsts,order = c(0,1,3), seasonal= c(1,1,1))
fitCardioEquipmentsts
summary(fitCardioEquipmentsts)
fitCardioEquipmentsts <-arima(ts_CardioEquipmentsts,order = c(0,1,3), seasonal= c(1,1,1))
fitCardioEquipmentsts <-arima(ts_CardioEquipmentsts,order = c(0,1,3), seasonal= c(1,1,1))
fitCardioEquipmentsts <-arima(ts_CardioEquipmentsts,order = c(0,1,3), seasonal= c(1,1,1))
ndiffs(ts_CardioEquipmentsts)
nsdiffs(ts_CardioEquipmentsts)
fitCardioEquipmentsts <-arima(ts_CardioEquipmentsts,order = c(1,1,3), seasonal= c(1,1,1))
fitCardioEquipmentsts <-arima(ts_CardioEquipmentsts,order = c(1,0,3), seasonal= c(1,0
fitCardioEquipmentsts <-arima(ts_CardioEquipmentsts,order = c(1,0,3), seasonal= c(1,0,1))
fitCardioEquipmentsts <-arima(ts_CardioEquipmentsts,order = c(1,1,1), seasonal= c(1,1,1))
setwd("C:/Users/MAYURESH/OneDrive - National College of Ireland/NCI/SEMESTER 2/DAPA/Project/IMPLEMENATATION DOCUMENTATION/CODE/dataset")
Fishing <- read.csv("Fishing.csv",header=T, na.strings=c(""), stringsAsFactors = T)
ts_Fishing <- ts(Fishing,start = c(2015,1),frequency = 12)
is.ts(campinghikingts)
plot.ts(ts_Fishing, main= "Sales for CardioEquipments")
start(ts_Fishing)
end(ts_Fishing)
autoplot(ts_Fishing)
monthplot(ts_Fishing)
seasonplot(ts_Fishing)
dec.ts_Fishing<- decompose(ts_Fishing, type="additive")
dec.ts_Fishing
plot(dec.ts_Fishing)
summary(dec.ts_Fishing)
adf.test(ts_Fishing)
ndiffs(ts_Fishing)
nsdiffs(ts_Fishing)
acf(ts_Fishing)
pacf(ts_Fishing)
fit_Fishing <-arima(ts_Fishing,order = c(1,0,3), seasonal= c(2,0,1))
fit_Fishing
summary(fit_Fishing)
qqnorm(fit_Fishing$residuals)
qqline(fit_Fishing$residuals)
Box.test(fit_Fishing$residuals, type = "Ljung-Box")
checkresiduals(fit_Fishing)
forecast(fit_Fishing,4)
plot(forecast(fit_Fishing,8),Xlab="Month",ylab="Consumption")
plot(forecast(fit_Fishing, 12)) #forecast and actual data
pred_Fishing <- fitted.values(fit_Fishing)
lines(pred_Cleats, col="red") #add predicted values during training
predicted_Fishing= as.data.frame(pred_Fishing)
setwd("C:/Users/MAYURESH/OneDrive - National College of Ireland/NCI/SEMESTER 2/DAPA/Project/IMPLEMENATATION DOCUMENTATION/CODE/dataset")
Mens_Footware <- read.csv("Mens_Footware.csv",header=T, na.strings=c(""), stringsAsFactors = T)
ts_Mens_Footware <- ts(Mens_Footware,start = c(2015,1),frequency = 12)
is.ts(ts_Mens_Footware)
plot.ts(ts_Mens_Footware, main= "Sales for Mens_Footware")
start(ts_Mens_Footware)
end(ts_Mens_Footware)
autoplot(ts_Mens_Footware)
monthplot(ts_Mens_Footware)
seasonplot(ts_Mens_Footware)
dec.ts_Mens_Footware<- decompose(ts_Mens_Footware, type="additive")
dec.ts_Mens_Footware
plot(dec.ts_Mens_Footware)
summary(dec.ts_Mens_Footware)
adf.test(ts_Mens_Footware)
ndiffs(ts_Mens_Footware)
nsdiffs(ts_Mens_Footware)
acf(ts_Mens_Footware)
pacf(ts_Mens_Footware)
fit_Mens_Footware <-arima(ts_Mens_Footware,order = c(1,1,1), seasonal= c(1,1,1))
fit_Mens_Footware
summary(fit_Mens_Footware)
qqnorm(fit_Mens_Footware$residuals)
qqline(fit_Mens_Footware$residuals)
Box.test(fit_Mens_Footware$residuals, type = "Ljung-Box")
checkresiduals(fit_Mens_Footware)
forecast(fit_Mens_Footware,4)
plot(forecast(fit_Mens_Footware,8),Xlab="Month",ylab="Consumption")
plot(forecast(fit_Mens_Footware, 12)) #forecast and actual data
pred_Mens_Footware <- fitted.values(fit_Mens_Footware)
lines(pred_Mens_Footware, col="red") #add predicted values during training
predicted_Mens_Footware= as.data.frame(pred_Mens_Footware)
setwd("C:/Users/MAYURESH/OneDrive - National College of Ireland/NCI/SEMESTER 2/DAPA/Project/IMPLEMENATATION DOCUMENTATION/CODE/dataset")
Womens_Apparel <- read.csv("Womens_Apparel.csv",header=T, na.strings=c(""), stringsAsFactors = T)
ts_Womens_Apparel <- ts(Womens_Apparel,start = c(2015,1),frequency = 12)
is.ts(ts_Womens_Apparel)
plot.ts(ts_Womens_Apparel, main= "Sales for Womens_Apparel")
start(ts_Womens_Apparel)
end(ts_Womens_Apparel)
autoplot(ts_Womens_Apparel)
monthplot(ts_Womens_Apparel)
seasonplot(ts_Womens_Apparel)
dec.ts_Womens_Apparel<- decompose(ts_Womens_Apparel, type="additive")
dec.ts_Womens_Apparel
plot(dec.ts_Womens_Apparel)
summary(dec.ts_Womens_Apparel)
adf.test(ts_Womens_Apparel)
ndiffs(ts_Womens_Apparel)
nsdiffs(ts_Womens_Apparel)
acf(ts_Womens_Apparel)
pacf(ts_Womens_Apparel)
fit_Womens_Apparel <-arima(ts_Womens_Apparel,order = c(2,0,3), seasonal= c(2,0,3))
fit_Womens_Apparel
summary(fit_Womens_Apparel)
qqnorm(fit_Womens_Apparel$residuals)
qqline(fit_Womens_Apparel$residuals)
Box.test(fit_Womens_Apparel$residuals, type = "Ljung-Box")
checkresiduals(fit_Womens_Apparel)
forecast(fit_Womens_Apparel,4)
plot(forecast(fit_Womens_Apparel,8),Xlab="Month",ylab="Consumption")
plot(forecast(fit_Womens_Apparel, 12)) #forecast and actual data
pred_Womens_Apparel <- fitted.values(fit_Womens_Apparel)
lines(pred_Womens_Apparel, col="red") #add predicted values during training
predicted_Womens_Apparel= as.data.frame(pred_Womens_Apparel)
setwd("C:/Users/MAYURESH/OneDrive - National College of Ireland/NCI/SEMESTER 2/DAPA/Project/IMPLEMENATATION DOCUMENTATION/CODE/dataset")
Water_Sports <- read.csv("Water_Sports.csv",header=T, na.strings=c(""), stringsAsFactors = T)
ts_Water_Sports <- ts(Water_Sports,start = c(2015,1),frequency = 12)
is.ts(ts_Water_Sports)
plot.ts(ts_Water_Sports, main= "Sales for Water_Sports")
start(ts_Water_Sports)
end(ts_Water_Sports)
autoplot(ts_Water_Sports)
monthplot(ts_Water_Sports)
seasonplot(ts_Water_Sports)
dec.ts_Water_Sports<- decompose(ts_Water_Sports, type="additive")
dec.ts_Water_Sports
plot(dec.ts_Water_Sports)
summary(dec.ts_Water_Sports)
adf.test(ts_Water_Sports)
ndiffs(ts_Water_Sports)
nsdiffs(ts_Water_Sports)
acf(ts_Water_Sports)
pacf(ts_Water_Sports)
fit_Water_Sports <-arima(ts_Water_Sports,order = c(4,0,4), seasonal= c(2,0,2))
fit_Water_Sports
summary(fit_Water_Sports)
qqnorm(fit_Water_Sports$residuals)
qqline(fit_Water_Sports$residuals)
Box.test(fit_Water_Sports$residuals, type = "Ljung-Box")
checkresiduals(fit_Water_Sports)
forecast(fit_Water_Sports,4)
plot(forecast(fit_Water_Sports,8),Xlab="Month",ylab="Consumption")
plot(forecast(fit_Water_Sports, 12)) #forecast and actual data
pred_Water_Sports <- fitted.values(fit_Water_Sports)
lines(pred_Water_Sports, col="red") #add predicted values during training
predicted_Water_Sports= as.data.frame(pred_Water_Sports)
setwd("C:/Users/MAYURESH/OneDrive - National College of Ireland/NCI/SEMESTER 2/DAPA/Project/IMPLEMENATATION DOCUMENTATION/CODE/dataset")
IndoorOutdoorGame <- read.csv("IndoorOutdoorGame.csv",header=T, na.strings=c(""), stringsAsFactors = T)
ts_IndoorOutdoorGame <- ts(IndoorOutdoorGame,start = c(2015,1),frequency = 12)
is.ts(ts_IndoorOutdoorGame)
plot.ts(ts_IndoorOutdoorGame, main= "Sales for IndoorOutdoorGame")
start(ts_IndoorOutdoorGame)
end(ts_IndoorOutdoorGame)
autoplot(ts_IndoorOutdoorGame)
monthplot(ts_IndoorOutdoorGame)
seasonplot(ts_IndoorOutdoorGame)
dec.ts_IndoorOutdoorGame<- decompose(ts_IndoorOutdoorGame, type="additive")
dec.ts_IndoorOutdoorGame
plot(dec.ts_IndoorOutdoorGame)
summary(dec.ts_IndoorOutdoorGame)
adf.test(ts_IndoorOutdoorGame)
ndiffs(ts_IndoorOutdoorGame)
nsdiffs(ts_IndoorOutdoorGame)
acf(ts_IndoorOutdoorGame)
pacf(ts_IndoorOutdoorGame)
fit_IndoorOutdoorGame <-arima(ts_IndoorOutdoorGame,order = c(4,0,4), seasonal= c(2,0,2))
fit_IndoorOutdoorGame
summary(fit_IndoorOutdoorGame)
qqnorm(fit_IndoorOutdoorGame$residuals)
qqline(fit_IndoorOutdoorGame$residuals)
Box.test(fit_IndoorOutdoorGame$residuals, type = "Ljung-Box")
checkresiduals(fit_IndoorOutdoorGame)
forecast(fit_IndoorOutdoorGame,4)
plot(forecast(fit_IndoorOutdoorGame,8),Xlab="Month",ylab="Consumption")
plot(forecast(fit_IndoorOutdoorGame, 12)) #forecast and actual data
pred_IndoorOutdoorGame <- fitted.values(fit_IndoorOutdoorGame)
lines(pred_IndoorOutdoorGame, col="red") #add predicted values during training
predicted_IndoorOutdoorGame= as.data.frame(pred_IndoorOutdoorGame)
fitCardioEquipmentsts <-arima(ts_CardioEquipmentsts,order = c(1,1,1), seasonal= c(1,1,1))
fitCardioEquipmentsts <-arima(ts_CardioEquipmentsts,order = c(1,1,1), seasonal= c(1,0,0)
fitCardioEquipmentsts <-arima(ts_CardioEquipmentsts,order = c(1,1,1), seasonal= c(1,0,0))
fitCardioEquipmentsts <-arima(ts_CardioEquipmentsts,order = c(1,0,1), seasonal= c(1,0,0))
summary(fitCardioEquipmentsts)
fitCardioEquipmentsts <-arima(ts_CardioEquipmentsts,order = c(0,1,3), seasonal= c(1,0,0))
fitCardioEquipmentsts <-arima(ts_CardioEquipmentsts,order = c(0,1,3), seasonal= c(1,0,1))
fitCardioEquipmentsts <-arima(ts_CardioEquipmentsts,order = c(0,1,3), seasonal= c(1,1,1))
fitCardioEquipmentsts <-arima(ts_CardioEquipmentsts,order = c(0,1,3), seasonal= c(1,0,1))
summary(fitCardioEquipmentsts)
fitCardioEquipmentsts <-arima(ts_CardioEquipmentsts,order = c(0,1,3), seasonal= c(1,0,2))
fitCardioEquipmentsts <-arima(ts_CardioEquipmentsts,order = c(0,1,3), seasonal= c(1,0,1))
fitCardioEquipmentsts
summary(fitCardioEquipmentsts)
qqnorm(fitCardioEquipmentsts$residuals)
qqline(fitCardioEquipmentsts$residuals)
Box.test(fitCardioEquipmentsts$residuals, type = "Ljung-Box")
checkresiduals(fitCardioEquipmentsts)
forecast(fitCardioEquipmentsts,4)
plot(forecast(fitCardioEquipmentsts,8),Xlab="Month",ylab="Consumption")
plot(forecast(fitCardioEquipmentsts, 12)) #forecast and actual data
pred_CardioEquipmentsts <- fitted.values(fitCardioEquipmentsts)
lines(pred_CardioEquipmentsts, col="red") #add predicted values during training
predicted_CardioEquipments= as.data.frame(pred_CardioEquipmentsts)
summary(fitcamphike)
summary(fitts_Cleats)
summary(fitCardioEquipmentsts)
summary(fit_Fishing)
summary(fit_Mens_Footware)
summary(fit_Womens_Apparel)
summary(fit_Water_Sports)
summary(fit_IndoorOutdoorGame)
plot(dec.camphike)
plot(dec.ts_Cleats)
plot(dec.ts_CardioEquipmentsts)
plot(dec.ts_Fishing)
plot(dec.ts_Mens_Footware)
plot(dec.ts_Womens_Apparel)
adf.test(dcampinghikingts)
acf(campinghikingts)
pacf(campinghikingts)
acf(ts_Cleats)
pacf(ts_Cleats)
acf(ts_Cleats)
pacf(ts_Cleats)
Box.test(fitts_Cleats$residuals, type = "Ljung-Box")
qqnorm(fitts_Cleats$residuals)
qqline(fitts_Cleats$residuals)
summary(fitts_Cleats)
summary(fit_Womens_Apparel)
ndiffs(ts_Womens_Apparel)
nsdiffs(ts_Womens_Apparel)
ndiffs(campinghikingts)
nsdiffs(campinghikingts)
plot(forecast(fitcamphike, 12)) #forecast and actual data
pred_camphike <- fitted.values(fitcamphike)
lines(pred_camphike, col="red") #add predicted values during training
plot(forecast(fitCardioEquipmentsts, 12)) #forecast and actual data
pred_CardioEquipmentsts <- fitted.values(fitCardioEquipmentsts)
lines(pred_CardioEquipmentsts, col="red") #add predicted values during training
plot(forecast(fitcamphike, 12)) #forecast and actual data
pred_camphike <- fitted.values(fitcamphike)
lines(pred_camphike, col="red") #add predicted values during training
pred_camphike
forecast(fitcamphike,4)
plot(forecast(fitts_Cleats, 12)) #forecast and actual data
pred_Cleats <- fitted.values(fitts_Cleats)
lines(pred_Cleats, col="red") #add predicted values during training
plot(forecast(fitCardioEquipmentsts, 12)) #forecast and actual data
pred_CardioEquipmentsts <- fitted.values(fitCardioEquipmentsts)
lines(pred_CardioEquipmentsts, col="red") #add predicted values during training
plot(forecast(fit_Fishing, 12)) #forecast and actual data
pred_Fishing <- fitted.values(fit_Fishing)
lines(pred_Cleats, col="red") #add predicted values during training
plot(forecast(fit_Mens_Footware, 12)) #forecast and actual data
pred_Mens_Footware <- fitted.values(fit_Mens_Footware)
lines(pred_Mens_Footware, col="red") #add predicted values during training
plot(forecast(fit_Fishing, 12)) #forecast and actual data
pred_Fishing <- fitted.values(fit_Fishing)
lines(pred_Cleats, col="red") #add predicted values during training
plot(forecast(fit_Womens_Apparel, 12)) #forecast and actual data
pred_Womens_Apparel <- fitted.values(fit_Womens_Apparel)
lines(pred_Womens_Apparel, col="red") #add predicted values during training
plot(forecast(fit_Water_Sports, 12)) #forecast and actual data
pred_Water_Sports <- fitted.values(fit_Water_Sports)
lines(pred_Water_Sports, col="red") #add predicted values during training
plot(forecast(fit_IndoorOutdoorGame, 12)) #forecast and actual data
pred_IndoorOutdoorGame <- fitted.values(fit_IndoorOutdoorGame)
lines(pred_IndoorOutdoorGame, col="red") #add predicted values during training
Box.test(fit_IndoorOutdoorGame$residuals, type = "Ljung-Box")
